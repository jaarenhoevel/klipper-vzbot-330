[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Reset speed multiplicator
    M220 S100
    CLEAR_PAUSE

    SET_LED LED=bed_light GREEN=0.2 RED=0.0 BLUE=0.75

    # Wait for bed temperature to raise
    TEMPERATURE_WAIT SENSOR="heater_bed" MINIMUM={BED_TEMP - 15}

    # Home the printer and clean nozzle
    G28
    CLEAN_NOZZLE

    # Wait for bed to reach temperature
    M190 S{BED_TEMP}

    # Start extruder preheating
    M104 S148

    # Home Z again
    G28 Z

    # Calibrate bed mesh
    BED_MESH_CALIBRATE ADAPTIVE=1
    
    # Wait in case extruder is not preheated yet
    M109 S148

    # Perform touch probe
    CARTOGRAPHER_TOUCH

    # Set extruder temp
    M104 S{EXTRUDER_TEMP}

    # Move out of the way to allow for bed cleaning
    MOVE_TO_FRONT_CORNER

    # Enable LED to allow for better failure detection
    SET_LED LED=bed_light GREEN=0.75 RED=0.75 BLUE=0.75

    # Wait nozzle to reach temperature
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM={EXTRUDER_TEMP - 20}

    M300 S500

    #SKEW_PROFILE LOAD=CaliFlower

    LINE_PURGE

[gcode_macro END_PRINT]
gcode:
    {% set lift_z = 50|abs %}       # amount to lift z
    {% set min_z = 150|abs %}       # min z to lift to
    
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0

    #SET_SKEW CLEAR=1

    # Move out of the way
    MOVE_TO_BACK_CORNER

    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if (act_z + lift_z) > max_z %}
        {% set target_z = max_z %}
    {% else %}
        {% set target_z = act_z + lift_z %}
    {% endif %}

    {% if target_z < min_z %}
        {% set target_z = min_z %}
    {% endif %}

    G90
    G1 Z{target_z} F150
    
    # Disable steppers
    M84

    SET_LED LED=bed_light GREEN=0.75 RED=0.0 BLUE=0.0

[gcode_macro MOVE_TO_BACK_CORNER]
description: Moves print head to back left corner
gcode:
    G91
    G1 Z5 F150
    G90
    G1 X5 Y320 F10000  

[gcode_macro MOVE_TO_FRONT_CORNER]
description: Moves print head to front left corner
gcode:
    G91
    G1 Z5 F150
    G90
    G1 X5 Y5 F10000  

[gcode_macro CLEAN_NOZZLE]
gcode:
    # Set extruder temp
    M104 S240
    
    # Raise nozzle
    G91
    G1 Z5 F150

    # Move to extrude spot
    G90
    G1 X0 Y325 F10000
    G1 Z2 F150

    # Wait for extruder to reach certain temperature, then stop heating
    TEMPERATURE_WAIT SENSOR="extruder" MINIMUM=220
    M104 S0

    # Start part cooling fan and extrude a little
    M106 S255
    G1 E2 F25

    # Wait for temperature to drop
    TEMPERATURE_WAIT SENSOR="extruder" MAXIMUM=210

    # Move to the side and lower nozzle
    G1 Z0 X5 F150

    # Wipe
    {% for wipe in range(20) %}
        G1 X{10 + (25 * (loop.index is even))} F800
    {% endfor %}

    G1 X40 F5000

    # Stop fan
    M106 S0

    # Raise nozzle
    G91
    G1 Z5 F150


[gcode_macro M300]
gcode:
    # Use a default 1kHz tone if S is omitted.
    {% set S = params.S|default(2000)|int %}
    # Use a 10ms duration is P is omitted.
    {% set P = params.P|default(100)|int %}
    SET_PIN PIN=_beeper_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
    G4 P{P}
    SET_PIN PIN=_beeper_pin VALUE=0
    G4 P{P}

[gcode_macro ENABLE_SPORT_MODE]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={printer[printer.toolhead.extruder].temperature|float + 10.0} # Increase extruder temp by 10 deg
    M220 S125 # Set speed to 125%

[gcode_macro SET_ACTIVE_SPOOL]
gcode:
    {% if params.ID %}
      {% set id = params.ID|int %}
      {action_call_remote_method(
        "spoolman_set_active_spool",
        spool_id=id
      )}
    {% else %}
      {action_respond_info("Parameter 'ID' is required")}
    {% endif %}

[gcode_macro CLEAR_ACTIVE_SPOOL]
gcode:
    {action_call_remote_method(
      "spoolman_set_active_spool",
      spool_id=None
    )}
